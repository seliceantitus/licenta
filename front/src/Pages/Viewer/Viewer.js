import React from "react";
import * as THREE from 'three';
import {Grid} from "@material-ui/core";


class Viewer extends React.Component {

    constructor(props) {
        super(props);
        this.animate = this.animate.bind(this);
        this.initializeCamera = this.initializeCamera.bind(this);
    }

    componentDidMount() {
        const width = this.mount.clientWidth;
        const height = this.mount.clientHeight;
        this.scene = new THREE.Scene();
        this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);
        this.renderer = new THREE.WebGLRenderer({antialias: true});

        this.renderer.setSize(width, height);
        this.mount.appendChild(this.renderer.domElement);
        this.initializeCamera();

        this.geometry = new THREE.Geometry();
        const points = [
            {z: 0.000000, x: 16.922240, y: 0.000000},
            {z: 9.951886, x: 13.697596, y: 0.000000},
            {z: 16.100759, x: 5.231454, y: 0.000000},
            {z: 16.105999, x: -5.233156, y: 0.000000},
            {z: 9.951387, x: -13.696909, y: 0.000000},
            {z: 0.000000, x: -16.929280, y: 0.000000},
            {z: -9.949735, x: -13.694635, y: 0.000000},
            {z: -16.102100, x: -5.231889, y: 0.000000},
            {z: -16.092780, x: 5.228861, y: 0.000000},
            {z: -9.949641, x: 13.694506, y: 0.000000},
            {z: -0.000000, x: 16.918950, y: 0.000000},
            {z: 9.946796, x: 13.690590, y: 0.000000},
            {z: 16.107940, x: 5.233787, y: 0.000000},
            {z: 16.112096, x: -5.235137, y: 0.000000},
            {z: 9.956530, x: -13.703987, y: 0.000000},
            {z: 0.000000, x: -16.929830, y: 0.000000},
            {z: -9.948606, x: -13.693082, y: 0.000000},
            {z: -16.094853, x: -5.229535, y: 0.000000},
            {z: -16.099532, x: 5.231055, y: 0.000000},
            {z: -9.958816, x: 13.707134, y: 0.000000},
            {z: -0.000000, x: 16.926990, y: 0.000000},
            {z: 9.945609, x: 13.688956, y: 0.000000},
            {z: 16.113551, x: 5.235610, y: 0.000000},
            {z: 16.108320, x: -5.233910, y: 0.000000},
            {z: 9.948935, x: -13.693535, y: 0.000000},
            {z: 0.000000, x: 16.930550, y: 1.500000},
            {z: 9.947237, x: 13.691197, y: 1.500000},
            {z: 16.098771, x: 5.230808, y: 1.500000},
            {z: 16.094054, x: -5.229275, y: 1.500000},
            {z: 9.946402, x: -13.690048, y: 1.500000},
            {z: 0.000000, x: -16.921850, y: 1.500000},
            {z: -9.948048, x: -13.692313, y: 1.500000},
            {z: -16.090621, x: -5.228160, y: 1.500000},
            {z: -16.093217, x: 5.229003, y: 1.500000},
            {z: -9.952239, x: 13.698082, y: 1.500000},
            {z: -0.000000, x: 16.921770, y: 1.500000},
            {z: 9.943016, x: 13.685388, y: 1.500000},
            {z: 16.099342, x: 5.230993, y: 1.500000},
            {z: 16.090764, x: -5.228206, y: 1.500000},
            {z: 9.948165, x: -13.692475, y: 1.500000},
            {z: 0.000000, x: -16.915990, y: 1.500000},
            {z: -9.945309, x: -13.688543, y: 1.500000},
            {z: -16.090250, x: -5.228039, y: 1.500000},
            {z: -16.097573, x: 5.230419, y: 1.500000},
            {z: -9.951992, x: 13.697742, y: 1.500000},
            {z: -0.000000, x: 16.939970, y: 1.500000},
            {z: 9.957029, x: 13.704675, y: 1.500000},
            {z: 16.093636, x: 5.229139, y: 1.500000},
            {z: 16.090725, x: -5.228194, y: 1.500000},
            {z: 9.949511, x: -13.694328, y: 1.500000},
            {z: 0.000000, x: 16.923900, y: 3.000000},
            {z: 9.949553, x: 13.694384, y: 3.000000},
            {z: 16.101663, x: 5.231747, y: 3.000000},
            {z: 16.095880, x: -5.229869, y: 3.000000},
            {z: 9.946238, x: -13.689822, y: 3.000000},
            {z: 0.000000, x: -16.919370, y: 3.000000},
            {z: -9.950423, x: -13.695582, y: 3.000000},
            {z: -16.086037, x: -5.226670, y: 3.000000},
            {z: -16.090288, x: 5.228051, y: 3.000000},
            {z: -9.945174, x: 13.688357, y: 3.000000},
            {z: -0.000000, x: 16.913270, y: 3.000000},
            {z: 9.945985, x: 13.689474, y: 3.000000},
            {z: 16.089974, x: 5.227950, y: 3.000000},
            {z: 16.089042, x: -5.227647, y: 3.000000},
            {z: 9.953456, x: -13.699756, y: 3.000000},
            {z: 0.000000, x: -16.935700, y: 3.000000},
            {z: -9.953949, x: -13.700436, y: 3.000000},
            {z: -16.101748, x: -5.231775, y: 3.000000},
            {z: -16.098401, x: 5.230687, y: 3.000000},
            {z: -9.948489, x: 13.692920, y: 3.000000},
            {z: -0.000000, x: 16.926130, y: 3.000000},
            {z: 9.946743, x: 13.690517, y: 3.000000},
            {z: 16.095937, x: 5.229887, y: 3.000000},
            {z: 16.092038, x: -5.228620, y: 3.000000},
            {z: 9.948136, x: -13.692435, y: 3.000000},
            {z: 0.000000, x: 16.918890, y: 4.500000},
            {z: 9.955877, x: 13.703089, y: 4.500000},
            {z: 16.106351, x: 5.233271, y: 4.500000},
            {z: 16.103612, x: -5.232381, y: 4.500000},
            {z: 9.957200, x: -13.704910, y: 4.500000},
            {z: 0.000000, x: -16.911430, y: 4.500000},
            {z: -9.953279, x: -13.699514, y: 4.500000},
            {z: -16.080777, x: -5.224961, y: 4.500000},
            {z: -16.095614, x: 5.229782, y: 4.500000},
            {z: -9.949829, x: 13.694765, y: 4.500000},
            {z: -0.000000, x: 16.937000, y: 4.500000},
            {z: 9.944703, x: 13.687710, y: 4.500000},
            {z: 16.092827, x: 5.228877, y: 4.500000},
            {z: 16.094216, x: -5.229328, y: 4.500000},
            {z: 9.951051, x: -13.696447, y: 4.500000},
            {z: 0.000000, x: -16.921490, y: 4.500000},
            {z: -9.951510, x: -13.697078, y: 4.500000},
            {z: -16.105876, x: -5.233116, y: 4.500000},
            {z: -16.091619, x: 5.228484, y: 4.500000},
            {z: -9.947666, x: 13.691787, y: 4.500000},
            {z: -0.000000, x: 16.926930, y: 4.500000},
            {z: 9.947348, x: 13.691351, y: 4.500000},
            {z: 16.100179, x: 5.231265, y: 4.500000},
            {z: 16.090221, x: -5.228030, y: 4.500000},
            {z: 9.947390, x: -13.691407, y: 4.500000},
            {z: 0.000000, x: 16.931550, y: 6.000000},
            {z: 9.941447, x: 13.683228, y: 6.000000},
            {z: 16.087587, x: 5.227174, y: 6.000000},
            {z: 16.100160, x: -5.231259, y: 6.000000},
            {z: 9.958540, x: -13.706754, y: 6.000000},
            {z: 0.000000, x: -16.921070, y: 6.000000},
            {z: -9.953832, x: -13.700274, y: 6.000000},
            {z: -16.106570, x: -5.233342, y: 6.000000},
            {z: -16.106152, x: 5.233206, y: 6.000000},
            {z: -9.952121, x: 13.697920, y: 6.000000},
            {z: -0.000000, x: 16.925760, y: 6.000000},
            {z: 9.952398, x: 13.698300, y: 6.000000},
            {z: 16.101957, x: 5.231843, y: 6.000000},
            {z: 16.099618, x: -5.231083, y: 6.000000},
            {z: 9.953138, x: -13.699319, y: 6.000000},
            {z: 0.000000, x: -16.924490, y: 6.000000},
            {z: -9.943352, x: -13.685849, y: 6.000000},
            {z: -16.091933, x: -5.228586, y: 6.000000},
            {z: -16.094796, x: 5.229516, y: 6.000000},
            {z: -9.944398, x: 13.687289, y: 6.000000},
            {z: -0.000000, x: 16.920600, y: 6.000000},
            {z: 9.951245, x: 13.696714, y: 6.000000},
            {z: 16.100379, x: 5.231330, y: 6.000000},
            {z: 16.095899, x: -5.229875, y: 6.000000},
            {z: 9.945197, x: -13.688390, y: 6.000000},
            {z: 0.000000, x: 16.936460, y: 7.500000},
            {z: 9.947125, x: 13.691043, y: 7.500000},
            {z: 16.093560, x: 5.229115, y: 7.500000},
            {z: 16.090022, x: -5.227965, y: 7.500000},
            {z: 9.955824, x: -13.703017, y: 7.500000},
            {z: 0.000000, x: -16.925190, y: 7.500000},
            {z: -9.946390, x: -13.690032, y: 7.500000},
            {z: -16.094967, x: -5.229572, y: 7.500000},
            {z: -16.100731, x: 5.231444, y: 7.500000},
            {z: -9.950687, x: 13.695946, y: 7.500000},
            {z: -0.000000, x: 16.936290, y: 7.500000},
            {z: 9.947613, x: 13.691715, y: 7.500000},
            {z: 16.092542, x: 5.228784, y: 7.500000},
            {z: 16.090583, x: -5.228147, y: 7.500000},
            {z: 9.946849, x: -13.690663, y: 7.500000},
            {z: 0.000000, x: -16.921930, y: 7.500000},
            {z: -9.953397, x: -13.699675, y: 7.500000},
            {z: -16.098296, x: -5.230653, y: 7.500000},
            {z: -16.086246, x: 5.226738, y: 7.500000},
            {z: -9.953162, x: 13.699352, y: 7.500000},
            {z: -0.000000, x: 16.936810, y: 7.500000},
            {z: 9.954249, x: 13.700848, y: 7.500000},
            {z: 16.100578, x: 5.231395, y: 7.500000},
            {z: 16.095386, x: -5.229708, y: 7.500000},
            {z: 9.947202, x: -13.691148, y: 7.500000},
        ];
        points.forEach((point) => {
            let vertex = new THREE.Vector3();
            vertex.x = point.x;
            vertex.y = point.y;
            vertex.z = point.z;

            this.geometry.vertices.push(vertex);
        });

        this.material = new THREE.PointsMaterial({color: 0xFFFFFF, size: 0.25});
        this.mesh = new THREE.Points(this.geometry, this.material);

        this.scene.add(this.mesh);
        this.animate();
    }

    initializeCamera() {
        this.camera.position.x = 0;
        this.camera.position.y = 0;
        this.camera.position.z = 35;
    }

    animate() {
        this.frameId = window.requestAnimationFrame(this.animate);
        this.renderer.render(this.scene, this.camera);
        this.mesh.rotation.x += 0.001;
    }

    render() {
        return (
            <Grid container justify={"center"} alignItems={"flex-start"} spacing={2} direction={"row"}>
                <div
                    id="boardCanvas"
                    style={{width: "80vw", height: "40vw"}}
                    ref={mount => {
                        this.mount = mount;
                    }}
                />
            </Grid>
        );
    }
}

export default Viewer;